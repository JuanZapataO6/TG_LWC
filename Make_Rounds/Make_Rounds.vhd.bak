library IEEE;
library work;
use IEEE.std_logic_1164.all;
use IEEE.std_logic_unsigned.all;
use ieee.std_logic_misc.all;
use work.all;

entity Make_Rounds is 
    port(
        RC0 : inout std_logic_vector(0 to 15);
        RC1 : inout std_logic_vector(0 to 15);
        R   : in std_logic_vector (3 downto 0);
        D   : in std_logic_vector (3 downto 0);
        CLK : in std_logic
    );
    end Make_Rounds;
architecture Main of Make_Rounds is
    signal      x0: std_logic_vector (15 downto 0);
    signal      x1: std_logic_vector (15 downto 0);
    signal    n : integer range 0 to 15;
    signal    i : integer range 0 to 15;
    begin
        x0 <= "11111110"& R(3 downto 0) & D(3 downto 0);
        x1 <= "11111110"& R(3 downto 0) & D(3 downto 0);

    process (x0,x1, CLK)
        begin
        if (CLK'event AND CLK = '1') the      
            if i<= 16 then
                if x0(0)='1'  then 
                    x0 <= x0(x0'LENGTH-2 downto 0) & '0';
                    x0 <= x0(x0'LENGTH -1 downto 8) & (x0(7 downto 0)xor X"2D");
                else
                    x0 <= x0(x0'LENGTH-2 downto 0) & '0';
                end if;
                if x1(0)='1' then
                    x1 <= x1(x1'LENGTH-2 downto 0) & '0';
                    x1 <= x1(x1'LENGTH -1 downto 8) & (x1(7 downto 0) xor X"2D");
                else
                    x1 <= x1(x1'LENGTH-2 downto 0) & '0';     
                end if;
                i<= i+1;
            else 
                    i<=0;
            end if;
        end if;
                
    end process;
    RC0 <= x0;
    RC1 <= x1;
end Main;
